function summ_data(t){var a=0;for(var e in t)a+=t[e];return a}function stacked_data(t,a){var e=[];for(var i in a)e.push(a[i]+t[i]);return e}function legend_draw(){var t=ChartLineBig.getDatasetMeta(0).data[ChartLineBig.getDatasetMeta(0).data.length-1],a=ChartLineBig.getDatasetMeta(1).data[ChartLineBig.getDatasetMeta(1).data.length-1];$("#er_legend").css("top",t._model.y+"px"),$("#fd_legend").css("top",a._model.y+"px"),chartMobileFull&&(t=chartMobileFull.getDatasetMeta(0).data[chartMobileFull.getDatasetMeta(0).data.length-1],a=chartMobileFull.getDatasetMeta(1).data[chartMobileFull.getDatasetMeta(1).data.length-1],$("#er_legend_mobile").css("top",t._model.y-30+"px"),$("#fd_legend_mobile").css("top",a._model.y-30+"px"),mobile_all_compute())}function mobile_all_compute(){var t=er[compute_data.length-1],a=compute_data[compute_data.length-1],e=er[0],i=compute_data[0],s=a-i,o=t-e,n=summ_data(compute_data),r=summ_data(er),l=n+r;draw_mobile(!1,s,o,n,r,l)}function draw_mobile(t,a,e,i,s,o){var n,r="Mar";t!==!1?(n=time[t._index],r="Mar"):(n="All",r="All");var l="2019",d="Daily";12==time.length&&(r=n,l="2019",d="Year"),time.length<11&&(r="All",l=n,"All"==n&&(l=""),d="Ever"),$(".month").html(r),$(".year").html(l),$(".show").html(d),$("#mobile_times_total").html(o);var c="&uarr",h="#B8E986";a<0&&(c="&darr",h="#FF729A"),$("#mobile_fd").html(i+'&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:'+h+';">'+a+"&nbsp;&nbsp;"+c+";</span>"),c="&uarr",h="#B8E986",e<0&&(c="&darr",h="#FF729A"),$("#mobile_er").html(s+'&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:'+h+';">'+e+"&nbsp;&nbsp;"+c+";</span>")}function draw_me(t,a){var e=100*t/a,i=100-e,s={Back:i,Green:e},o=ctx.createRadialGradient(55,130,40,60,140,90);o.addColorStop(.3,"#855df8"),o.addColorStop(1,"#3C2DA9");var n=ctx.createRadialGradient(50,60,70,60,60,90);n.addColorStop(.3,"#54F0FF"),n.addColorStop(1,"#1285B0");var r=new Piechart({canvas:myCanvas,data:s,colors:[o,n],shadows:["#855df8","#54f0ff"],caps:["source2","source"],labels:["E","F"],doughnutHoleSize:.92,isshadow:!0});r.draw()}function draw_caps(t,a,e,i,s,o,n,r){var l=a,d=e,c=l+(i-4)*Math.cos(s),h=d+(i-4)*Math.sin(s);t.moveTo(a,e),t.shadowBlur=0,t.shadowOffsetX=0,t.shadowOffsetY=0,t.shadowColor="white";var p=document.getElementById(o);t.save(),t.translate(c,h),t.rotate(s),t.drawImage(p,-7,-9,14,18),t.restore(),t.save(),t.translate(c,h),t.beginPath(),this.ctx.fillStyle="white",this.ctx.font=Label_font,p=document.getElementById(o+"b"),t.drawImage(p,-6,-7,12,14),t.closePath(),t.restore()}function drawPieSlice(t,a,e,i,s,o,n,r,l){t.fillStyle=n,t.beginPath(),r===!0?(t.shadowBlur=4,t.shadowOffsetX=0,t.shadowOffsetY=0,t.shadowColor=l):(t.shadowBlur=0,t.shadowOffsetX=0,t.shadowOffsetY=0,t.shadowColor="white"),t.moveTo(a,e),t.arc(a,e,i,s,o),t.closePath(),t.fill()}function thisYear(t,a){var e,i,s;for(i=document.getElementsByClassName("tabcontent"),e=0;e<i.length;e++)i[e].style.display="none";for(s=document.getElementsByClassName("tablinks"),e=0;e<s.length;e++)s[e].className=s[e].className.replace(" active","");document.getElementById(a).style.display="block",t.currentTarget.className+=" active"}function keysAccordion(){if($(window).width()<560){var t,a=document.getElementsByClassName("keys");for(t=0;t<a.length;t++)a[t].addEventListener("click",function(t){this.classList.toggle("active");for(var a=this.nextElementSibling;a&&a.classList.contains("hidden-buttons-keys");)a.classList.toggle("d-none"),a=a.nextElementSibling})}}$(window).scroll(function(){var t=$(this).scrollTop();t>90?$(".mobile-nav").addClass("active"):$(".mobile-nav").removeClass("active")}),$(".info span").text("i"),$(".inp-wr").hasClass("error")?$(".error .info span").text("!"):$(".error .info span").text("i");var fd=[5,7,1,24,13,28,40,14,38,11,22,16,34,19,1,14,38,21],er=[38,11,22,16,34,19,1,14,5,7,1,24,13,28,40,14,5,14],time=["Mar 1",2,3,4,5,6,8,10,12,14,16,18,20,22,24,26,28,30],compute_data=stacked_data(fd,er);new Chart(document.getElementById("bar-chart-horizontal"),{type:"horizontalBar",data:{labels:["Foo"],datasets:[{label:"bad",data:[25],backgroundColor:"#9eaeff"},{label:"better",data:[10],backgroundColor:"rgba(255, 255, 255, 0.3)"}]},options:{plugins:{stacked100:{enable:!0}},legend:{display:!1},scales:{xAxes:[{display:!1}],yAxes:[{display:!1}]}}});var ctx=document.getElementById("myChart").getContext("2d"),gradientFd=ctx.createLinearGradient(0,0,0,250);gradientFd.addColorStop(0,"rgba(133, 93, 248, 0.9)"),gradientFd.addColorStop(1,"rgba(60, 45, 169, 0.9)");var gradientEr=ctx.createLinearGradient(0,0,0,250);gradientEr.addColorStop(0,"rgba(84, 240, 255, 0.9)"),gradientEr.addColorStop(1,"rgba(18, 125, 176, 0.9)");var ChartLineBig=new Chart(ctx,{type:"line",data:{labels:time,datasets:[{label:"Emotion recognition",borderColor:gradientEr,pointRadius:100,pointBackgroundColor:"transparent",pointBorderColor:"transparent",fill:!0,backgroundColor:gradientEr,borderWidth:1,data:er,lineTension:0},{label:"Face detector",borderColor:gradientFd,pointRadius:50,pointBackgroundColor:"transparent",pointBorderColor:"transparent",fill:!0,backgroundColor:gradientFd,borderWidth:1,data:compute_data,lineTension:0}]},options:{responsive:!0,events:["click"],tooltips:{mode:"index",backgroundColor:"rgba(30, 37, 73, 0.5)",titleFontFamily:"inherit",height:"100%",position:"nearest",bodyFontColor:"#a9b2e1",bodyFontSize:14,bodySpacing:30,xPadding:20,yPadding:25,cornerRadius:0,multiKeyBackground:"transparent",enabled:!1,intersect:!0},hover:{mode:"nearest",intersect:!0},maintainAspectRatio:!1,legend:{display:!1,position:"right",labels:{fontColor:"#54F0FF",fontSize:"14",lineHeight:"20px",usePointStyle:!0}},scales:{yAxes:[{ticks:{fontColor:"#6673B4",maxTicksLimit:5,padding:14},gridLines:{drawTicks:!0,lineWidth:1,color:"rgba(102, 115, 180, 0.2)"}}],xAxes:[{gridLines:{zeroLineColor:"#fff",display:!1},ticks:{padding:8,fontColor:"#6673B4"}}]}}});$("#myChart").mouseleave(function(){$("#black_tooltip").css("display","none"),$("#special_tooltip").css("display","none"),$("#black_tooltip_right").css("display","none")}),legend_draw(),$("#graph-mobile").mouseleave(function(){$("#black_tooltip_mobile").css("display","none"),$("#black_tooltip_right_mobile").css("display","none"),mobile_all_compute()}),$("#graph-mobile").bind("mousemove",function(t){var a,e=chartMobileFull.getDatasetMeta(0),i=100;e.data.forEach(function(e){if(Math.abs(e._model.x-t.pageX)<i&&(a=e,i=Math.abs(e._model.x-t.pageX)),a&&a._index>0){$("#black_tooltip_mobile").css("display","block"),$("#black_tooltip_right_mobile").css("display","block");var s=chartMobileFull.getDatasetMeta(0).data[a._index-1];$("#black_tooltip_mobile").css("width",s._model.x+"px"),$("#black_tooltip_right_mobile").css("width",$("#graph-mobile").width()-a._model.x+"px");var o=compute_data[a._index]-compute_data[s._index],n=er[a._index]-er[s._index],r=compute_data[a._index]+er[a._index];draw_mobile(a,o,n,compute_data[a._index],er[a._index],r)}})}),$("#myChart").bind("mousemove",function(t){var a,e=ChartLineBig.getDatasetMeta(0),i=100;if(e.data.forEach(function(e){Math.abs(e._model.x-t.pageX+40)<i&&(a=e,i=Math.abs(e._model.x-t.pageX+40))}),a&&a._index>0){var s=ChartLineBig.getDatasetMeta(0).data[a._index-1],o=compute_data[a._index]-compute_data[s._index],n=er[a._index]-er[s._index],r=er[a._index]+compute_data[a._index];$("#all_tip").html(r);var l="&uarr",d="#B8E986";o<0&&(l="&darr",d="#FF729A"),$("#fd_tip").html(compute_data[a._index]+'&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:'+d+';">'+o+"&nbsp;&nbsp;"+l+";</span>"),l="&uarr",d="#B8E986",n<0&&(l="&darr",d="#FF729A"),$("#er_tip").html(er[a._index]+'&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:'+d+';">'+n+"&nbsp;&nbsp;"+l+";</span>"),$("#black_tooltip").css("display","block"),$("#special_tooltip").css("display","block"),$("#black_tooltip_right").css("display","block"),$("#black_tooltip").css("width",s._model.x-40+"px"),a._model.x+190>$("#myChart").width()?($("#special_tooltip").css("left",s._model.x-190+"px"),$("#black_tooltip").css("width",s._model.x-40-190+"px"),$("#black_tooltip_right").css("width",$("#myChart").width()-a._model.x-10+"px")):($("#special_tooltip").css("left",a._model.x+"px"),$("#black_tooltip_right").css("width",$("#myChart").width()-a._model.x-10-190+"px"))}}),$(".chart-full .charts .right .icon-btn a").click(function(){var t,a=$(this).attr("data-fill");"true"===a&&(t=!0,compute_data=stacked_data(fd,er),$(this).attr("data-fill","false")),"false"===a&&(t=!1,compute_data=fd,$(this).attr("data-fill","true")),ChartLineBig.data.datasets[1].data=compute_data,ChartLineBig.data.datasets[0].fill=t,ChartLineBig.data.datasets[1].fill=t,ChartLineBig.update(),legend_draw()}),$(".chart-full .charts .right .tabs a").click(function(){var t=$(this).attr("data-time");$(".charts .right .tabs a").removeClass("active"),$(this).addClass("active"),"month"===t?(fd=[5,7,1,24,13,28,40,14,38,11,22,16,34,19,1,14,38,21],er=[38,11,22,16,34,19,1,14,5,7,1,24,13,28,40,14,5,14],time=["Mar 1",2,3,4,5,6,8,10,12,14,16,18,20,22,24,26,28,30]):"year"===t?(fd=[5,7,1,24,13,28,40,14,38,11,22,16],er=[38,11,22,16,34,19,1,14,5,7,1,24],time=["January","February","March","April","May","June","July","August","September","October","November","December"]):"ever"===t&&(fd=[5,7,1,24,13,28],er=[38,11,22,16,34,19],time=[2015,2016,2017,2018,2019,2020]),compute_data=stacked_data(fd,er),ChartLineBig.data.datasets[1].data=compute_data,ChartLineBig.data.datasets[0].data=er,ChartLineBig.data.labels=time,ChartLineBig.update(),legend_draw()});var myCanvas=document.getElementById("doughnut–°hartcanvas");myCanvas.width=180,myCanvas.height=180;var Label_font="9px Arial",ctx=myCanvas.getContext("2d"),x=0,Piechart=function(t){this.options=t,this.canvas=t.canvas,this.labels=t.labels,this.ctx=this.canvas.getContext("2d"),this.colors=t.colors,this.shadow=t.isshadow,this.shadows=t.shadows,this.caps=t.caps,this.caps_array=[],this.draw=function(){var t,a=0,e=0;for(var i in this.options.data)t=this.options.data[i],a+=t;var s=Math.PI/2;for(i in this.options.data){t=this.options.data[i];var o=2*Math.PI*t/a;drawPieSlice(this.ctx,this.canvas.width/2,this.canvas.height/2,Math.min((this.canvas.width-20)/2,(this.canvas.height-20)/2),s,s+o,this.colors[e%this.colors.length],this.shadow,this.shadows[e%this.shadows.length]);var n={};n.color=this.caps[e%this.colors.length],n.label=this.labels[e%this.colors.length],n.start_angle=s,n.centerX=this.canvas.width/2,n.centerY=this.canvas.height/2,n.radius=Math.min((this.canvas.width-20)/2,(this.canvas.height-20)/2),this.caps_array.push(n),s+=o,e++}if(this.ctx.globalCompositeOperation="destination-out",this.options.doughnutHoleSize){drawPieSlice(this.ctx,this.canvas.width/2,this.canvas.height/2,this.options.doughnutHoleSize*Math.min((this.canvas.width-20)/2,(this.canvas.height-20)/2),0,2*Math.PI,!1,1),this.ctx.globalCompositeOperation="source-over";for(i in this.caps_array)draw_caps(this.ctx,this.caps_array[i].centerX,this.caps_array[i].centerY,this.caps_array[i].radius,this.caps_array[i].start_angle,this.caps_array[i].color,this.caps_array[i].label,this.shadow)}}};draw_me(800,1200);var btx=document.getElementById("myChartMini").getContext("2d"),myChartMini=new Chart(btx,{type:"line",data:{labels:time,datasets:[{label:"Er",borderColor:gradientEr,pointRadius:3,pointBackgroundColor:"transparent",pointBorderColor:"transparent",fill:!0,backgroundColor:gradientEr,borderWidth:1,data:er,lineTension:0},{label:"Fd",borderColor:gradientFd,pointRadius:3,pointBackgroundColor:"transparent",pointBorderColor:"transparent",fill:!0,backgroundColor:gradientFd,borderWidth:1,data:compute_data,lineTension:0}]},options:{responsive:!0,maintainAspectRatio:!1,legend:{display:!1,position:"right",labels:{fontColor:"#54F0FF",fontSize:"14",lineHeight:"20"}},tooltips:!1,scales:{yAxes:[{ticks:{fontColor:"#6673B4",maxTicksLimit:5,padding:14,display:!1},gridLines:{drawTicks:!0,lineWidth:1,color:"rgba(102, 115, 180, 0.2)",display:!1}}],xAxes:[{gridLines:{zeroLineColor:"#fff",display:!1},ticks:{padding:8,fontColor:"#6673B4",display:!1}}]}}});$(".right-bar .mini-chart .tabs a[data-fill]").click(function(){var t,a=$(this).attr("data-fill");"true"===a&&(t=!0,$(this).attr("data-fill","false")),"false"===a&&(t=!1,$(this).attr("data-fill","true")),myChartMini.data.datasets[0].fill=t,myChartMini.data.datasets[1].fill=t,myChartMini.update()}),$(".right-bar .mini-chart .tabs a[data-time]").click(function(){var t=$(this).attr("data-time");$(this).attr("data-time","month"),$(this).html("Month"),"month"===t&&($(this).attr("data-time","year"),$(this).html("Year")),"year"===t&&($(this).attr("data-time","ever"),$(this).html("Ever")),t=$(this).attr("data-time"),"month"===t?(fd=[5,7,1,24,13,28,40,14,38,11,22,16,34,19,1,14,38,21],er=[38,11,22,16,34,19,1,14,5,7,1,24,13,28,40,14,5,14],time=["Mar 1",2,3,4,5,6,8,10,12,14,16,18,20,22,24,26,28,30]):"year"===t?(fd=[5,7,1,24,13,28,40,14,38,11,22,16],er=[38,11,22,16,34,19,1,14,5,7,1,24],time=["January","February","March","April","May","June","July","August","September","October","November","December"]):"ever"===t&&(fd=[5,7,1,24,13,28],er=[38,11,22,16,34,19],time=[2015,2016,2017,2018,2019,2020]),compute_data=stacked_data(fd,er),ChartLineBig.data.datasets[1].data=compute_data,ChartLineBig.data.datasets[0].data=er,myChartMini.data.datasets[1].data=compute_data,myChartMini.data.datasets[0].data=er,myChartMini.data.labels=time,myChartMini.update()}),$("[data-fancybox]").fancybox({touch:!1});var acc=document.getElementsByClassName("accordion"),i;for(i=0;i<acc.length;i++)acc[i].addEventListener("click",function(){this.classList.toggle("active");var t=this.nextElementSibling;"table-row"===t.style.display?t.style.display="none":t.style.display="table-row"});keysAccordion(),$(window).resize(function(){keysAccordion()}),$(".menu").on("touch click",function(){$("#menu").toggleClass("active_menu"),$(".topnav").toggleClass("active"),$("a.menu").toggleClass("active")});var ctx=document.getElementById("mobile-chart").getContext("2d"),myChartMobileMini=new Chart(ctx,{type:"line",data:{labels:time,datasets:[{label:"Emotion recognition",borderColor:gradientEr,pointRadius:3,pointBackgroundColor:"transparent",pointBorderColor:"transparent",fill:!0,backgroundColor:gradientEr,borderWidth:1,data:er,lineTension:0},{label:"Face detector",borderColor:gradientFd,pointRadius:3,pointBackgroundColor:"transparent",pointBorderColor:"transparent",fill:!0,backgroundColor:gradientFd,borderWidth:1,data:compute_data,lineTension:0}]},options:{responsive:!0,tooltips:!1,maintainAspectRatio:!1,legend:{display:!1},scales:{yAxes:[{ticks:{display:!1,beginAtZero:!0},gridLines:{display:!1,tickMarkLength:0}}],xAxes:[{gridLines:{display:!1,tickMarkLength:0},ticks:{display:!1,beginAtZero:!0}}]}}}),ctx=document.getElementById("graph-mobile").getContext("2d"),chartMobileFull=new Chart(ctx,{type:"line",data:{labels:time,datasets:[{label:"Emotion recognition",borderColor:gradientEr,pointRadius:3,pointBackgroundColor:"transparent",pointBorderColor:"transparent",fill:!0,backgroundColor:gradientEr,borderWidth:3,data:er,lineTension:0},{label:"Face detector",borderColor:gradientFd,pointRadius:3,pointBackgroundColor:"transparent",pointBorderColor:"transparent",fill:!0,backgroundColor:gradientFd,borderWidth:3,data:compute_data,lineTension:0}]},options:{layout:{padding:{left:0,right:0,top:0,bottom:0}},responsive:!0,tooltips:{mode:"index",intersect:!1,backgroundColor:"rgba(30, 37, 73, 0.5)",titleFontFamily:"inherit",height:"100%",position:"nearest",bodyFontColor:"#a9b2e1",bodyFontSize:14,bodySpacing:30,xPadding:20,yPadding:25,cornerRadius:0,multiKeyBackground:"transparent",enabled:!1},hover:{mode:"nearest",intersect:!0},maintainAspectRatio:!1,legend:{display:!1,position:"right",labels:{fontColor:"#54F0FF",fontSize:"14",lineHeight:"20px",usePointStyle:!0}},scales:{yAxes:[{ticks:{fontColor:"#6673B4",maxTicksLimit:5,padding:0,display:!1,beginAtZero:!0},gridLines:{drawTicks:!0,lineWidth:1,color:"rgba(102, 115, 180, 0.2)",tickMarkLength:0}}],xAxes:[{gridLines:{zeroLineColor:"#fff",display:!1},afterFit:function(t){t.paddingRight=0,t.paddingLeft=0},ticks:{padding:0,fontColor:"#6673B4",beginAtZero:!0,labelOffset:5,callback:function(t,a,e){if(a>0&&a<e.length)return t}}}]}}}),filling=!0;$("#full-width-mobile-chart .icon-btn a").click(function(){var t=$(this).attr("data-fill");"true"===t?(filling=!0,$(this).attr("data-fill","false")):"false"===t&&(filling=!1,$(this).attr("data-fill","true")),chartMobileFull.data.datasets[0].fill=filling,chartMobileFull.data.datasets[1].fill=filling,chartMobileFull.update()}),$(".tabs-chart > li > a").click(function(){var t=$(this).attr("data-time");$(".tabs-chart li").removeClass("active"),$(this).parent("li").addClass("active"),"month"===t?(fd=[5,7,1,24,13,28,40,14,38,11,22,16,34,19,1,14,38,21],er=[38,11,22,16,34,19,1,14,5,7,1,24,13,28,40,14,5,14],time=["Mar 1",2,3,4,5,6,8,10,12,14,16,18,20,22,24,26,28,30]):"year"===t?(fd=[5,7,1,24,13,28,40,14,38,11,22,16],er=[38,11,22,16,34,19,1,14,5,7,1,24],time=["January","February","March","April","May","June","July","August","September","October","November","December"]):"ever"===t&&(fd=[5,7,1,24,13,28],er=[38,11,22,16,34,19],time=[2015,2016,2017,2018,2019,2020]),compute_data=stacked_data(fd,er),chartMobileFull.data.datasets[1].data=compute_data,chartMobileFull.data.datasets[0].data=er,chartMobileFull.data.labels=time,chartMobileFull.update(),legend_draw()}),$("#full-width-chart").click(function(){setTimeout(function(){legend_draw()},500)}),$(".change_pass-btn").click(function(){$(".password").toggleClass("d-block")}),$(".dashboard-info .dashboard_left-bar .nav .list_item:nth-child(1)").hasClass("active")&&$(".dashboard-info .dashboard_left-bar").addClass("active"),$(function(){$(".hide-show").show(),$(".hide-show span").addClass("show"),$(".hide-show span").click(function(){$(this).hasClass("show")?($(this).text("Hide"),$(this).parent().siblings(".password").attr("type","text"),$(this).removeClass("show")):($(this).text("Show"),$(this).parent().siblings(".password").attr("type","password"),$(this).addClass("show"))}),$(".change > a").on("click",function(){$(".hide-show span").text("Show").addClass("show"),$(".hide-show").parent().find(".password").attr("type","password")})}),$(".btn-change-long-page").click(function(){$(".main-info").toggleClass("long-page"),$(".dashboard_left-bar").toggleClass("long-page"),$("#dashboard").toggleClass("long-page"),$("#keys").toggleClass("long-page"),$("#users").toggleClass("long-page"),$("#payments").toggleClass("long-page"),$("#settings").toggleClass("long-page"),$(this).toggleClass("collapsed"),$("#chart-full").toggleClass("d-none"),$(".mini-chart").removeClass("d-none")});var $input=$('input[type="text"], input[type="password"], input[type="email"]');0!=$input.length?$(this).siblings("span").css("display","inline-block"):$(this).siblings("span").css("display","none"),$input.focus(function(){$(this).siblings("span").css("display","inline-block"),$(this).css("padding","0 0 10px 10px"),$(this).siblings(".hide-show").css("top","24px"),$(this).parent(":before").css("top","20px")}),$input.blur(function(){$(this).val()?($(this).siblings("span").css("display","inline-block"),$(this).css("padding","0 0 10px 10px"),$(this).siblings(".hide-show").css("top","24px"),$(this).parent(":before").css("top","20px")):($(this).siblings("span").css("display","none"),$(this).css("padding","15px 15px 15px 10px"),$(this).siblings(".hide-show").css("top","15px"))});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
